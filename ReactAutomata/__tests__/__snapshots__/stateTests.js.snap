// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`all state snapshots: idle 1`] = `
<RCTScrollView
  contentContainerStyle={
    Object {
      "alignItems": "center",
      "backgroundColor": "#F5FCFF",
      "flex": 1,
      "padding": 20,
    }
  }
  keyboardShouldPersistTaps="always"
>
  <View>
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "fontSize": 20,
          "margin": 10,
          "textAlign": "center",
        }
      }
    >
      Welcome to setState + react-automata
    </Text>
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
    >
      Current State 'idle'
    </Text>
    <View
      style={
        Object {
          "flexDirection": "row",
          "padding": 5,
        }
      }
    >
      <TextInput
        allowFontScaling={true}
        autoFocus={true}
        clearTextOnFocus={true}
        onChangeText={[Function]}
        onSubmitEditing={[Function]}
        placeholder="Packing Item"
        returnKeyLabel="Add Item"
        returnKeyType="done"
        style={
          Object {
            "backgroundColor": "#ddf",
            "flex": 1,
            "paddingHorizontal": 4,
          }
        }
        value=""
      />
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignSelf": "center",
            "backgroundColor": "#cfc",
            "borderRadius": 4,
            "margin": 5,
            "opacity": 1,
            "padding": 10,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
        >
          ADD
        </Text>
      </View>
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignSelf": "center",
            "backgroundColor": "#faa",
            "borderRadius": 4,
            "margin": 5,
            "opacity": 1,
            "padding": 10,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
        >
          CLEAR
        </Text>
      </View>
    </View>
    <View>
      <View
        style={
          Object {
            "borderBottomWidth": 1,
            "borderColor": "blue",
            "padding": 1,
            "paddingHorizontal": 6,
          }
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "fontSize": 18,
            }
          }
        >
          nachos
        </Text>
      </View>
      <View
        style={
          Object {
            "borderBottomWidth": 1,
            "borderColor": "blue",
            "padding": 1,
            "paddingHorizontal": 6,
          }
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "fontSize": 18,
            }
          }
        >
          burritos
        </Text>
      </View>
      <View
        style={
          Object {
            "borderBottomWidth": 1,
            "borderColor": "blue",
            "padding": 1,
            "paddingHorizontal": 6,
          }
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "fontSize": 18,
            }
          }
        >
          hot dog
        </Text>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`all state snapshots: loaded 1`] = `
<RCTScrollView
  contentContainerStyle={
    Object {
      "alignItems": "center",
      "backgroundColor": "#F5FCFF",
      "flex": 1,
      "padding": 20,
    }
  }
  keyboardShouldPersistTaps="always"
>
  <View>
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "fontSize": 20,
          "margin": 10,
          "textAlign": "center",
        }
      }
    >
      Welcome to setState + react-automata
    </Text>
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
    >
      Current State 'idle'
    </Text>
    <View
      style={
        Object {
          "flexDirection": "row",
          "padding": 5,
        }
      }
    >
      <TextInput
        allowFontScaling={true}
        autoFocus={true}
        clearTextOnFocus={true}
        onChangeText={[Function]}
        onSubmitEditing={[Function]}
        placeholder="Packing Item"
        returnKeyLabel="Add Item"
        returnKeyType="done"
        style={
          Object {
            "backgroundColor": "#ddf",
            "flex": 1,
            "paddingHorizontal": 4,
          }
        }
        value=""
      />
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignSelf": "center",
            "backgroundColor": "#cfc",
            "borderRadius": 4,
            "margin": 5,
            "opacity": 1,
            "padding": 10,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
        >
          ADD
        </Text>
      </View>
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignSelf": "center",
            "backgroundColor": "#faa",
            "borderRadius": 4,
            "margin": 5,
            "opacity": 1,
            "padding": 10,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
        >
          CLEAR
        </Text>
      </View>
    </View>
    <View>
      <View
        style={
          Object {
            "borderBottomWidth": 1,
            "borderColor": "blue",
            "padding": 1,
            "paddingHorizontal": 6,
          }
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "fontSize": 18,
            }
          }
        >
          nachos
        </Text>
      </View>
      <View
        style={
          Object {
            "borderBottomWidth": 1,
            "borderColor": "blue",
            "padding": 1,
            "paddingHorizontal": 6,
          }
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "fontSize": 18,
            }
          }
        >
          burritos
        </Text>
      </View>
      <View
        style={
          Object {
            "borderBottomWidth": 1,
            "borderColor": "blue",
            "padding": 1,
            "paddingHorizontal": 6,
          }
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "fontSize": 18,
            }
          }
        >
          hot dog
        </Text>
      </View>
    </View>
  </View>
</RCTScrollView>
`;
